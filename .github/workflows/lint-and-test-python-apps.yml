name: Lint and Test Python Apps

on:
  workflow_call:
    inputs:
      app_names:
        description: 'List of python app names (folders in /src and /tests) to test'
        type: string
        default: '["tools/python/data_generator"]'
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJSON(inputs.app_names || '["tools/python/data_generator"]') }}
      fail-fast: false

    name: Test ${{ matrix.app }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Set path variables
        id: path-vars
        run: |
          echo "app_name=${{ matrix.app }}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          cd src/${{ matrix.app }}
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]

      - name: Lint with ruff
        run: |
          cd src/${{ matrix.app }}
          python -m ruff check .

      - name: Type check with mypy
        run: |
          cd src/${{ matrix.app }}
          python -m mypy .

      - name: Test with pytest
        run: |
          cd src/${{ matrix.app }}
          # Run tests from the repo-level tests directory (not under src/)
          # Use the absolute workspace path to avoid fragile relative paths
          python -m pytest "$GITHUB_WORKSPACE/tests/${{ matrix.app }}" --cov --cov-report=xml --cov-fail-under=10

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          file: ./src/${{ matrix.app }}/coverage.xml
          name: ${{ steps.path-vars.outputs.app_name }}-coverage