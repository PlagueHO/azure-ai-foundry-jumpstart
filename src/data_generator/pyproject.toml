[build-system]
requires = ["hatchling>=1.24"]
build-backend = "hatchling.build"

[project]
name = "azure-ai-foundry-data-generator"
version = "0.1.0"
description = "Synthetic data-generator for Azure AI Foundry Jumpstart."
authors = [{ name = "Daniel Scott-Raynsford", email = "dscottraynsford@outlook.com" }]
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }

dependencies = [
    "semantic-kernel[azure]==1.29.0",
    "azure-identity==1.23.0",
    "python-dotenv==1.1.0",
    "colorama==0.4.6",
    "PyYAML==6.0.2"
]

[project.optional-dependencies]
dev = [
  "ruff==0.11.10",
  "black==24.4.2",
  "mypy==1.15.0",
  "types-PyYAML==6.0.12.20250516",  # For mypy type checking
  "types-colorama==0.4.15.20240311",  # For mypy type checking
  "pytest==8.3.5",
  "pytest-asyncio==0.23.7",
  "pytest-cov==6.1.1",
]

[project.scripts]
generate-data = "data_generator.cli:main"   # CLI entry-point (stub to be implemented)

[tool.hatch.build.targets.wheel]
# The 'packages' key indicates the directory name of the package in the wheel.
# The 'sources' key maps this package name to the source directory.
# Here, content of "." (current directory) will become the "create_ai_search_index" package.
packages = ["data_generator"]
sources = [
  { include = ".", dest = "data_generator" }
]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]

[tool.mypy]
python_version = "3.10"
strict = true
files = ["data_generator", "tests"]

[tool.pytest.ini_options]
addopts = "-ra --cov=data_generator --cov-report=term-missing"
markers = ["live: marks tests that hit live Azure endpoints (deselect with -m 'not live')"]

[tool.hatch.build.targets.sdist]
include = ["data_generator/**", "README.md", "pyproject.toml"]
